# ðŸ“˜ Recipe API Documentation

______________________________________________________________________________________________________________

## ðŸ”¹ `GET /api/recipes`
**Description:** Get all approved recipes with filters and pagination  
**Query Parameters:**
- `search` (optional): Text search (title, ingredients, dietary_tags)
- `category` (optional): Filter by category
- `difficulty` (optional): Filter by difficulty
- `dietary` (optional): Filter by dietary_tags
- `page` (default: 1): Pagination page number
- `limit` (default: 10): Items per page

**Response:**
{
  "recipes": [...],
  "totalPages": 5
}


_________________________________________________________________________________________________________________

ðŸ”¹ GET /api/recipes/user-recipes
Auth: âœ… Required
Description: Get logged-in user's own approved + pending recipes
Query Params: page, limit
Response:

{
  "recipes": [...],
  "totalPages": 3,
  "currentPage": 1
}

___________________________________________________________________________________________________________________

ðŸ”¹ GET /api/recipes/public/user-recipes/:id
Description: Get public approved recipes of a user by ID
Params: id â€“ user ID
Response: Array of recipes
Error: 404 if user not found or banned


_____________________________________________________________________________________________________________________

ðŸ”¹ GET /api/recipes/:id
Description: Get a single recipe by ID
Params: id â€“ recipe ID
Response: Recipe object
Error:

404 â€“ if not found

403 â€“ if recipe is banned

______________________________________________________________________________________________________________________

ðŸ”¹ POST /api/recipes
Auth: âœ… Required
Description: Create a new recipe
Body (multipart/form-data):

title, category, difficulty, etc.

ingredients: JSON stringified array

dietary_tags: JSON stringified array

image_url: file (optional)

Response :- { ...createdRecipe }

________________________________________________________________________________________________________________________

ðŸ”¹ PUT /api/recipes/:id
Auth: âœ… Required
Description: Update a recipe (only by its author)
Params: id â€“ recipe ID
Body (multipart/form-data): Same as creation
Response: { "message": "Recipe updated successfully" }

Error:
403 â€“ unauthorized
500 â€“ if update fails

____________________________________________________________________________________________________________________________

ðŸ”¹ DELETE /api/recipes/:id

Auth: âœ… Required
Description: Delete a recipe
Params: id â€“ recipe ID
Response: { "message": "Recipe deleted successfully" }

